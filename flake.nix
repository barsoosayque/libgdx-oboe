{
  inputs = {
    nixpkgs.url = github:NixOS/nixpkgs/nixpkgs-unstable;
    android-nixpkgs.url = github:tadfisher/android-nixpkgs;
    utils.url = github:numtide/flake-utils;
  };

  outputs = { self, nixpkgs, android-nixpkgs, utils }:
    utils.lib.eachDefaultSystem (system:
      let
        pkgs = import nixpkgs {
          inherit system;
          config.android_sdk.accept_license = true;
          config.allowUnfree = true;
        };

        java = pkgs.jdk11;

        platformsAndroidVersion = "33";
        ndkVersion = "25.1.8937393";
        buildToolsVersion = "33.0.0";
        platformToolsVersion = "33.0.3";
        cmakeVersion = "3.10.2.4988404";
        toSdkVersion = v: builtins.replaceStrings [ "." ] [ "-" ] v;

        android-sdk = android-nixpkgs.sdk."${system}" (sdkPkgs: [
          sdkPkgs.cmdline-tools-latest
          sdkPkgs.platform-tools
          sdkPkgs."build-tools-${toSdkVersion buildToolsVersion}"
          sdkPkgs."platforms-android-${toSdkVersion platformsAndroidVersion}"
          sdkPkgs."ndk-${toSdkVersion ndkVersion}"
          sdkPkgs."cmake-${toSdkVersion cmakeVersion}"
        ]);
        sdkDir = "${android-sdk}/share/android-sdk";

        # Build inputs
        requiredPrograms = with pkgs; [
          # androidComposition.androidsdk
          android-sdk
          java
          cmake
          pkg-config
          autoreconfHook
        ];

        # Compiletime/Runtime deps
        requiredLibs = with pkgs; [

        ];

        # IDE/shell dependencies
        developPrograms = with pkgs; [
          android-studio
        ];

        projectName = "libgdx-oboe";
      in
      rec {
        # `nix build`
        packages."${projectName}" = pkgs.androidenv.buildApp {
          pname = projectName;
          version = "0.3.0";
          src = self;
          release = true;

          nativeBuildInputs = requiredPrograms;
          buildInputs = requiredLibs;

          platformVersions = [ "24" ];

          includeNDK = true;
        };
        defaultPackage = packages."${projectName}";

        # `nix develop`
        devShell = pkgs.mkShell rec {
          nativeBuildInputs = developPrograms ++ requiredPrograms;
          buildInputs = requiredLibs;

          ANDROID_SDK_ROOT = "${sdkDir}";
          ANDROID_NDK_ROOT = "${ANDROID_SDK_ROOT}/ndk/${ndkVersion}";
          NDK_VERSION = ndkVersion;
          NDK_DIR = "${ANDROID_NDK_ROOT}";

          GRADLE_OPTS = "-Dorg.gradle.project.android.aapt2FromMavenOverride=${ANDROID_SDK_ROOT}/build-tools/${buildToolsVersion}/aapt2";
          JAVA_HOME = "${java.home}";

          shellHook = ''
            export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:${pkgs.lib.makeLibraryPath buildInputs}";
            export PATH="$ANDROID_SDK_ROOT/cmake/${cmakeVersion}"/bin:$PATH"

            echo "// Auto-generated by flake.nix\nsdk.dir=$ANDROID_SDK_ROOT" > local.properties
            chmod -w local.properties
          '';
        };
      });
}
